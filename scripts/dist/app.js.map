{"version":3,"sources":["../header.js"],"names":[],"mappings":"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","sourcesContent":["(function () {\n  var bgColor = 0x333333;\n  var wireColor = 0x444444;\n\n  var scene = new THREE.Scene();\n  scene.background = new THREE.Color(bgColor);\n\n  var header = document.querySelector('header');\n  var container = document.querySelector('header .container');\n  var width = 80;\n  var height = 80;\n\n  var renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(width, height);\n\n  renderer.domElement.id = 'logo';\n  header.insertBefore(renderer.domElement, container);\n\n  var camera = new THREE.PerspectiveCamera(60, width / height, 0.01, 1000);\n  camera.position.set(0, 0, 2.4);\n\n  var aLight = new THREE.AmbientLight(0x080808);\n  scene.add(aLight);\n\n  var dLight = new THREE.DirectionalLight(0xffffff, 1);\n  dLight.position.set(1, 1, 1);\n  scene.add(dLight);\n\n  var dLight = new THREE.DirectionalLight(0xffffff, 0.4);\n  dLight.position.set(-1, -0.25, 0.25);\n  scene.add(dLight);\n\n  var pLight = new THREE.PointLight(0x1ac6ff, 0.8, 10);\n  pLight.position.set(1, 0.5, 0.5);\n  scene.add(pLight);\n\n  // -----------------------------------------------------------------\n\n  var cube = new THREE.Group();\n\n  var cubeGeo = new THREE.IcosahedronBufferGeometry(0.8, 0);\n\n  var wire = new THREE.Mesh(\n    cubeGeo,\n    new THREE.MeshBasicMaterial({\n      color: wireColor,\n      wireframe: true,\n    })\n  );\n\n  var solid = new THREE.Mesh(\n    cubeGeo,\n    new THREE.MeshBasicMaterial({\n      color: bgColor,\n    })\n  );\n\n  cube.add(wire);\n  cube.add(solid);\n\n  scene.add(cube);\n\n  // -----------------------------------------------------------------\n\n  var mouse = new THREE.Vector2();\n\n  var cubeTarget = new THREE.Euler();\n\n  var xRange = THREE.Math.degToRad(90);\n  var yRange = THREE.Math.degToRad(180);\n\n  header.addEventListener('mousemove', mousemove, false);\n  function mousemove(e) {\n    // NDC -1 to 1\n    var rect = header.getBoundingClientRect();\n    mouse.x = ((e.clientX - rect.left) / rect.width) * 2 - 1;\n    mouse.y = ((e.clientY - rect.top) / rect.height) * -2 + 1;\n\n    cubeTarget.y = mouse.x * yRange;\n    cubeTarget.x = -mouse.y * xRange;\n  }\n\n  // window.addEventListener( 'resize', resize, false );\n  // function resize() {\n  // \tcamera.aspect = width / height;\n  // \tcamera.updateProjectionMatrix();\n  // \trenderer.setSize( width, height );\n  // }\n\n  renderer.setAnimationLoop(loop);\n\n  function loop() {\n    if (getComputedStyle(renderer.domElement).display == 'none') return;\n\n    lerp(cube.rotation, 'x', cubeTarget.x);\n    lerp(cube.rotation, 'y', cubeTarget.y);\n\n    renderer.render(scene, camera);\n  }\n\n  function lerp(object, prop, destination) {\n    if (object && object[prop] !== destination) {\n      object[prop] += (destination - object[prop]) * 0.1;\n\n      if (Math.abs(destination - object[prop]) < 0.001) {\n        object[prop] = destination;\n      }\n    }\n  }\n})();\n"],"file":"app.js"}